---
import { SITE_BRAND, SITE_TITLE } from '../consts';
import HeaderLink from './HeaderLink.astro';
import { Icon } from 'astro-icon/components'
import Searchbar from './Searchbar.astro';

const navItems = [
  {
    label: 'Trending Games',
    href: '/',
  },
  {
    label: 'Hot Games',
    href: '/hot',
  },
  {
    label: 'New Games',
    href: '/new',
  },
];

// Add state management for sidebar
let isSidebarOpen = false;
---

<header class="p-4 bg-amber-50 mx-auto w-full shadow-md">
  <nav class="flex flex-col justify-between items-center">
    <div class="w-full flex gap-1.5">
      <button 
        id="menuBtn"
        class="px-1 py-1 rounded-lg hover:bg-amber-100 hover:cursor-pointer md:hidden"
      >
        <Icon name="uil:bars" class="text-2xl" />
      </button>
      <a href="/" class="hover:cursor-pointer hover:text-amber-600"><span class="text-2xl font-bold">{SITE_BRAND}</span></a>
    </div>

    <div id="sidebar" class="fixed left-0 top-0 h-full w-56 bg-amber-50 shadow-lg transform -translate-x-full transition-transform duration-300 ease-in-out z-50">
      <div class="p-4">
        <button 
          id="closeBtn"
          class="absolute top-4 right-4 px-2 py-1 rounded-lg hover:bg-amber-100"
        >
          <Icon name="uil:times" class="text-2xl" />
        </button>
        <ul class="flex flex-col gap-4 mt-8">
          {navItems.map((item) => (
            <li><HeaderLink href={item.href} class="font-bold text-md">{item.label}</HeaderLink></li>
          ))}
        </ul>
      </div>
    </div>

    <div class="flex flex-col md:flex-row justify-between items-center w-full">
      <ul class="hidden  md:flex md:w-2/3 gap-4 justify-start ">
        {navItems.map((item) => (
          <li><HeaderLink href={item.href} class="font-bold text-md">{item.label}</HeaderLink></li>
        ))}
      </ul>
      <div class="hidden md:flex md:w-1/3 justify-end items-center gap-2">
        <Searchbar/>
      </div>
    </div>
  </nav>
</header>

<script>
  const menuBtn = document.getElementById('menuBtn');
  const sidebar = document.getElementById('sidebar');
  const closeBtn = document.getElementById('closeBtn');
  let isOpen = false;

  menuBtn?.addEventListener('click', () => {
    isOpen = !isOpen;
    if (isOpen) {
      sidebar?.classList.remove('-translate-x-full');
    } else {
      sidebar?.classList.add('-translate-x-full');
    }
  });

  // Add close button handler
  closeBtn?.addEventListener('click', () => {
    isOpen = false;
    sidebar?.classList.add('-translate-x-full');
  });
</script>


