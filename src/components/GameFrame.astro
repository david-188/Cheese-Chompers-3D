---
const {game} = Astro.props;
import ShareButtons from './ShareButtons.tsx';
import { Icon } from 'astro-icon/components'
---

<section class="flex gap-3 h-[600px] p-2 rounded-lg ">
  <div class="w-1/6 hidden xl:block  rounded-lg text-center text-sm bg-gray-100"></div>
  <div class="w-full xl:w-4/6 h-full flex flex-col gap-4 flex-1 justify-center">
    <div id="game-intro" class="flex-1 relative overflow-hidden rounded-3xl p-8 flex items-center justify-center">
      <div class="absolute inset-0 z-0">
        <div class="absolute inset-0 bg-gradient-to-br from-purple-800 via-green-800 to-purple-800"></div>
        <img 
          src={game.data.heroImage} 
          alt="" 
          class="w-full h-full object-cover blur-2xl scale-110 opacity-20"
        />
      </div>
      <div class="relative max-w-2xl z-10 bg-white/20 backdrop-blur-xl rounded-3xl p-4 sm:p-8 md:p-16 flex flex-col sm:flex-row justify-between items-center w-full hover:shadow-lg transition-shadow duration-300 hover:shadow-sky-500">
        <div class="flex flex-col gap-4 w-2/3 sm:max-w-2xl">
          <button id="play-button" class="bg-black/80 text-white px-6 py-3 rounded-full font-medium flex items-center gap-2 hover:bg-black/90 transition-colors hover:cursor-pointer w-fit">
            PLAY GAME
          </button>
          <p class="text-xl sm:text-2xl font-bold text-white">{game.data.title}</p>
          <p class="text-sm sm:text-base text-white/90 line-clamp-3 sm:line-clamp-none">{game.data.description}</p>
        </div>
        
        <div class="w-32 h-32 mt-4 sm:mt-0 rounded-full overflow-hidden border-4 border-white/30 shadow-xl flex items-center justify-center hover:scale-105 transition-transform duration-300">
          <img 
            src={game.data.heroImage} 
            alt={game.data.title} 
            class="object-cover w-32 h-32 rounded-full"
          />
        </div>
      </div>

      <div class="absolute bottom-4 right-4 w-full flex justify-end gap-2">
        <ShareButtons client:load/>
        <!-- <a href={`/#comments`} class="hover:cursor-pointer bg-black/80 text-white px-3 py-2 rounded-full font-medium flex items-center gap-2 hover:bg-black/90 transition-colors">Discuss</a> -->
        <!-- <button class="opacity-20 hover:opacity-100 hover:cursor-pointer bg-black/80 text-white px-3 py-2 rounded-full font-medium flex items-center gap-2 hover:bg-black/90 transition-colors">Share</button> -->
        <a href="#comments" class="opacity-20 hover:opacity-100 hover:cursor-pointer bg-black/80 text-white px-3 py-2 rounded-full font-medium flex items-center gap-2 hover:bg-black/90 transition-colors">
          <Icon name="lucide:message-circle" class="w-5 h-5" />
        </a>
        <button class="opacity-20 hover:opacity-100 hover:cursor-pointer bg-black/80 text-white px-3 py-2 rounded-full font-medium flex items-center gap-2 hover:bg-black/90 transition-colors">
          <Icon name="lucide:expand" class="w-5 h-5" />
        </button>

        
      </div>

    </div>

    <div id="game-frame" class="hidden flex-1 relative overflow-hidden rounded-3xl">
      <div id="loading-spinner" class="hidden absolute inset-0 flex items-center justify-center bg-gray-900/80 z-10">
        <div class="animate-spin rounded-full h-16 w-16 border-4 border-white border-t-transparent"></div>
      </div>
      <iframe 
        src="" 
        class="w-full h-full border-0"
        allow="fullscreen; autoplay; encrypted-media"
        loading="lazy"
        sandbox="allow-scripts allow-same-origin allow-popups allow-forms"
        referrerpolicy="origin">
      </iframe>
      <div id="fullscreen-wrapper" class="absolute bottom-4 right-4 hidden opacity-20 hover:opacity-100 transition-opacity duration-300">
        <button id="fullscreen-button" class="bg-black/80 text-white px-6 py-3 rounded-full font-medium flex items-center gap-2 hover:bg-black/90 transition-colors hover:cursor-pointer">
          <span class="material-icons text-xl hover:cursor-pointer">
            <Icon name="lucide:expand" class="w-5 h-5" />
          </span>
        </button>
      </div>
      
    </div>
      
  </div>
  <div class="w-1/6 hidden xl:block bg-gray-100 rounded-lg text-center text-sm "></div>
</section>

<script define:vars={{gameEmbed: game.data.embed}}>
// 添加调试日志
console.log('Initial gameEmbed:', gameEmbed);

function loadGame() {
  const introEl = document.getElementById('game-intro');
  const frameEl = document.getElementById('game-frame');
  const iframeEl = frameEl?.querySelector('iframe');
  const fullscreenWrapper = document.getElementById('fullscreen-wrapper');
  const loadingSpinner = document.getElementById('loading-spinner');
  
  console.log('LoadGame called:', { introEl, frameEl, iframeEl, gameEmbed });
  
  if (introEl && frameEl && iframeEl) {
    introEl.classList.add('hidden');
    frameEl.classList.remove('hidden');
    loadingSpinner?.classList.remove('hidden');
    fullscreenWrapper?.classList.remove('hidden');
    iframeEl.src = gameEmbed;
    
    // Add iframe load event listener
    iframeEl.addEventListener('load', () => {
      loadingSpinner?.classList.add('hidden');
    });
    
    // 确保 iframe 可见
    frameEl.style.display = 'block';
    iframeEl.style.display = 'block';
  } else {
    console.error('Some elements not found:', { introEl, frameEl, iframeEl });
  }
}

document.addEventListener('DOMContentLoaded', () => {
  const playButton = document.getElementById('play-button');
  
  playButton?.addEventListener('click', (e) => {
    console.log('Play button clicked');
    e.preventDefault();
    loadGame();
  });

  // 修改全屏按钮的点击处理
  document.addEventListener('click', (e) => {
    const target = e.target;
    
    // 检查点击的元素或其父元素是否包含 fullscreen-button
    if (target.closest('#fullscreen-button') || 
        target.closest('.material-icons')) {
      console.log('Fullscreen button clicked');
      e.preventDefault();
      
      // 获取 iframe 元素
      const iframe = document.querySelector('#game-frame iframe');
      if (!iframe) {
        console.error('Iframe not found');
        return;
      }
      loadGame();
      // 检查游戏是否已加载
      if (!iframe.src) {
        console.log('Game not loaded, loading first...');
        // 给iframe一点加载时间后再请求全屏
        setTimeout(() => {
          requestIframeFullscreen(iframe);
        }, 100);
      } else {
        requestIframeFullscreen(iframe);
      }
    }
  });
});

// 专门处理 iframe 全屏的函数
function requestIframeFullscreen(iframe) {
  if (!iframe) {
    console.error('No iframe element provided');
    return;
  }
  
  console.log('Requesting fullscreen for iframe');
  try {
    if (iframe.requestFullscreen) {
      iframe.requestFullscreen();
    } else if (iframe.mozRequestFullScreen) { // Firefox
      iframe.mozRequestFullScreen();
    } else if (iframe.webkitRequestFullscreen) { // Chrome, Safari
      iframe.webkitRequestFullscreen();
    } else if (iframe.msRequestFullscreen) { // IE/Edge
      iframe.msRequestFullscreen();
    }
  } catch (error) {
    console.error('Fullscreen request failed:', error);
  }
}
</script>

<style>
  h2{
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--color-sky-400);
  }
</style>