---
import { Icon } from 'astro-icon/components'
---

<div class="upload-container p-4">
  <form id="upload-form" class="flex flex-col gap-4">
    <div class="flex items-center gap-4">
      <label for="image-upload" class="cursor-pointer bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600">
        <Icon name="lucide:upload" class="w-5 h-5 inline-block mr-2" />
        选择图片
      </label>
      <input 
        type="file" 
        id="image-upload" 
        name="image" 
        accept="image/*"
        class="hidden"
      />
      <button type="submit" class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600">
        上传
      </button>
    </div>
    <div id="upload-progress" class="hidden">
      <div class="w-full bg-gray-200 rounded-full h-2.5">
        <div id="progress-bar" class="bg-blue-600 h-2.5 rounded-full" style="width: 0%"></div>
      </div>
    </div>
    <div id="upload-status" class="text-sm"></div>
  </form>
</div>

<script>
  const form = document.getElementById('upload-form');
  const fileInput = document.getElementById('image-upload') as HTMLInputElement;
  const progressBar = document.getElementById('progress-bar');
  const uploadProgress = document.getElementById('upload-progress');
  const uploadStatus = document.getElementById('upload-status');

  if (!form || !fileInput || !progressBar || !uploadProgress || !uploadStatus) {
    console.error('Required elements not found');
    return;
  }

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const file = fileInput.files?.[0];
    if (!file) {
      uploadStatus.textContent = '请选择图片文件';
      return;
    }

    // 检查文件类型
    if (!file.type.startsWith('image/')) {
      uploadStatus.textContent = '请选择图片文件';
      return;
    }

    // 检查文件大小 (限制为5MB)
    if (file.size > 5 * 1024 * 1024) {
      uploadStatus.textContent = '文件大小不能超过5MB';
      return;
    }

    const formData = new FormData();
    formData.append('image', file);

    try {
      uploadProgress.classList.remove('hidden');
      uploadStatus.textContent = '正在上传...';

      const response = await fetch('/api/upload', {
        method: 'POST',
        body: formData
      });

      if (response.ok) {
        const result = await response.json();
        uploadStatus.textContent = '上传成功！';
        uploadStatus.className = 'text-sm text-green-500';
      } else {
        throw new Error('上传失败');
      }
    } catch (error) {
      uploadStatus.textContent = '上传失败，请重试';
      uploadStatus.className = 'text-sm text-red-500';
    } finally {
      uploadProgress.classList.add('hidden');
    }
  });

  // 监听文件选择
  fileInput.addEventListener('change', (e) => {
    const file = (e.target as HTMLInputElement).files?.[0];
    if (file) {
      uploadStatus.textContent = `已选择: ${file.name}`;
      uploadStatus.className = 'text-sm text-gray-600';
    }
  });
</script> 